SaLesson{#order:1,#units:OrderedCollection[SaMarkdownContent{#order:0,#title:'Objectives',#id:#___Objectives,#content:'#Objectifs \n\nCette lesson de notre cours cible se familiariser avec le contexte ROS. \nAprès cette lesson vous devez être capable de:\n\t\n- Comprendre qu\'est-ce que ce la navigation.\n- Comprendre Global et Local pathplanning.\n- Demarrer la stack de navigation.\n- Utiliser RVIZ pour cibler un destination.\n- Utiliser RVIZ pour observer le chemin global et local.'},SaMultipleChoiceQuestion{#order:1,#title:'Quiz #1: ROS Navigation',#id:#whatIsNavigation,#state:{'Action de passer d\'une information à une autre dans un document hypertexte ou hypermédia':true},#optional:false,#question:'Qu\'est-ce que ce la navigation en ROS?',#choices:['Se déplacer sur l\'eau','La capacite d\'un agent robotique de se deplacer dans l\'espace','Action de passer d\'une information à une autre dans un document hypertexte ou hypermédia'],#singleReponse:false},SaMarkdownContent{#order:2,#title:'Navigation',#id:#Navigation,#content:'# Navigation et composants\nIl est peut-être plus facile de comprendre la navigation comme la navigation GPS dans la vie quotidienne. \nSi vous définissez une destination sur l\'appareil de navigation, la navigation vous permet de vérifier la distance et le temps de trajet entre votre emplacement actuel et la destination, et vous pouvez définir des préférences et des informations spécifiques telles que les endroits où vous devez vous arrêter et les routes préférées sur le chemin.\nLe système de navigation a une histoire relativement courte. \nEn 1981, le constructeur automobile japonais Honda a proposé pour la première fois un système analogique basé sur un gyroscope à trois axes et un film cartographique appelé "Electro Gryrocator1". Ensuite, Etak Navigator2, un système de navigation électronique fonctionnant avec une boussole électronique et des capteurs fixés aux roues, a été présenté par la société américaine de fournitures automobiles Etak. Cependant, le montage du capteur et de la boussole électronique sur la voiture représentait une lourde charge pour les prix de l\'automobile et posait des problèmes de fiabilité du système de navigation. Depuis les années 1970, les États-Unis développent des systèmes de positionnement par satellite à des fins militaires, et dans les années 2000, 24 satellites GPS3 (Global Positioning System) sont devenus disponibles pour un usage général, et les systèmes de navigation basés sur la triangulation utilisant ces satellites ont commencé à se répandre.\n\n## Navigation d\'un robot mobile\nRevenons maintenant aux robots. Le fondement et le point fort d\'un robot mobile est sans aucun doute la navigation. La navigation en robotique est indissociable et essentielle. La navigation est le déplacement du robot vers une destination définie, ce qui n\'est pas aussi facile qu\'il n\'y paraît. Mais il est important de savoir où se trouve le robot lui-même et d\'avoir une carte de l\'environnement donné. Il est également important de trouver l\'itinéraire optimisé parmi les différentes options d\'acheminement, et d\'éviter les obstacles tels que les murs et les meubles. Il n\'y a pas de mission facile.\n\nDe quoi avons-nous besoin pour implémenter la navigation dans les robots ? Cela peut varier en fonction de l\'algorithme de navigation, et les éléments suivants peuvent être requis comme caractéristiques de base.\n➊ Carte\n➋ Pose du robot\n➌ Détection\n➍ Calcul du chemin et conduite\n\n\n### Carte\nLa première caractéristique essentielle pour la navigation est la carte. Le système de navigation est équipé d\'une carte très précise dès l\'achat, et la carte modifiée peut être téléchargée périodiquement afin de pouvoir être guidé vers la destination en fonction de la carte. Mais disposera-t-on d\'une carte de la pièce où sera placé le robot de service ? Comme un système de navigation, un robot a besoin d\'une carte. Nous devons donc créer une carte et la donner au robot, ou bien le robot devrait être capable de créer une carte par lui-même.\nSLAM (Simultaneous Localization And Mapping) est développé pour permettre au robot de créer une carte avec ou sans l\'aide d\'un être humain. Il s\'agit d\'une méthode permettant de créer une carte pendant que le robot explore l\'espace inconnu, détecte son environnement et estime sa position actuelle tout en créant une carte.\n\n### Pose du robot\nDeuxièmement, le robot doit être capable de mesurer et d\'estimer sa pose (position + orientation). Dans le cas d\'une automobile, le GPS est utilisé pour estimer sa pose. Cependant, le GPS ne peut pas être utilisé en intérieur, et même s\'il peut être utilisé, un GPS avec de grandes erreurs ne peut pas être utilisé pour les robots. De nos jours, un système de haute précision tel que le DGPS5 est utilisé, mais il est également inutile à l\'intérieur et trop cher pour un usage général. Afin de surmonter ce problème, diverses méthodes telles que la reconnaissance de marque et l\'estimation de la localisation à l\'intérieur ont été introduites. Cependant, en termes de coût et de précision, elles restent insuffisantes pour une utilisation générale. Actuellement, la méthode d\'estimation de la pose en intérieur la plus utilisée pour les robots de service est l\'estimation à l\'estime, qui est une estimation de la pose relative, mais elle est utilisée depuis longtemps et est composée de capteurs à faible coût et peut obtenir un certain niveau de résultats d\'estimation de la pose précise. La quantité de mouvement du robot est mesurée par la rotation de la roue. Cependant, il existe une erreur entre la distance calculée avec la rotation de la roue et la distance de déplacement réelle. Par conséquent, l\'information inertielle du capteur IMU peut être utilisé pour réduire l\'erreur en compensant l\'erreur de position et d\'orientation entre la valeur calculée et la valeur réelle.\n\n\n### Détecter\nTroisièmement, la détermination de la présence d\'obstacles tels que des murs et des objets nécessite des capteurs. Différents types de capteurs sont utilisés, comme les capteurs de distance et les capteurs de vision. Le capteur de distance utilise des capteurs de distance à laser (LDS, LRF, LiDAR), des capteurs à ultrasons et des capteurs de distance à infrarouge. Le capteur de vision comprend des caméras stéréo, des monocaméras, des caméras omnidirectionnelles, et récemment, RealSense, Kinect, Xtion, qui sont largement utilisés comme caméra de profondeur, sont utilisés pour identifier les obstacles.\n\n\n### Calcul du chemin et conduite\nLa dernière fonction essentielle de la navigation consiste à calculer et à parcourir la route optimale vers la destination. C\'est ce qu\'on appelle la recherche et la planification de chemin, et il existe de nombreux algorithmes qui effectuent cette tâche, comme l\'algorithme A*8, le champ potentiel, le filtre à particules et le RRT (Rapidly-exploring Random Tree).\nDans cette section, nous avons brièvement résumé le SLAM et les composants de la navigation, mais il est encore difficile et vaste à comprendre. La mesure et l\'estimation de la pose du robot ont été expliquées dans la section précédente. La mesure des obstacles, tels que les murs et les objets, est décrite dans le chapitre 8 Robots, capteurs et moteurs. Maintenant, examinons le SLAM pour créer une carte, et la navigation avec la carte générée.\n\n\n\n\n\n'},SaQuestionaire{#order:3,#title:'Quiz #2: Navigation',#id:#NavigationQuestionaire,#optional:false,#questions:OrderedCollection[SaOpenQuestion{#id:#NavComposantsPose,#state:'Pour savoir la position du robot et etablir une trajectoire adapter',#optional:false,#question:'Pour quoi ce\'est necessaire avoir une bonne pose en temps reel? '},SaMultipleChoiceQuestion{#id:#NavComposantsQuel,#state:{'Pose du Robot':true,'Detection':true,'Calcul du chemins et conduite':true,'Carte':true},#optional:false,#question:'De quoi avons-nous besoin pour implémenter la navigation dans les robots pluspars du temps?',#choices:['Carte','Pose du Robot','Lidar','Detection','Calcul du chemins et conduite','Sonar'],#singleReponse:false},SaOpenQuestion{#id:#NavComposantsDetect,#state:'En cas de nouvelle topographie / obstacle',#optional:false,#question:'Pour quoi on doit avoir des cartes mis a jour? '},SaMultipleChoiceQuestion{#id:#NavComposantsSlam,#state:{'Faux':true},#optional:false,#question:'La carte peut etre construit exclusivement pour un algorithm SLAM.',#choices:['Vrai','Faux'],#singleReponse:false},SaMultipleChoiceQuestion{#id:#NavComposants,#state:{'Algorithm':true,'Capteurs disponibles':true,'Le type de mouvement du robot':true},#optional:false,#question:'De quoi avons-nous besoin pour implémenter la navigation dans les robots depend de:',#choices:['Algorithm','Le type de mouvement du robot','Du qualite du reseaux disponible','Capteurs disponibles'],#singleReponse:false}]},SaMarkdownContent{#order:4,#title:'Path Planning',#id:#PathPlanning,#content:'# Planification de la trajectoire\n[https://www.researchgate.net/publication/322441239_A_survey_on_vision-based_UAV_navigation](https://www.researchgate.net/publication/322441239_A_survey_on_vision-based_UAV_navigation)\n\nLa planification de la trajectoire est une tâche importante dans la navigation des drones, elle consiste à trouver une trajectoire optimale du point de départ au point cible, en fonction de certains indicateurs de performance (tels que le coût minimal du travail, le temps de vol le plus court, la route la plus courte). Et pendant ce processus, le drone doit éviter les obstacles. Selon le type d\'informations sur l\'environnement utilisées pour calculer un chemin optimal, ce problème peut être divisé en deux types : la planification de chemin global et la planification de chemin local. La planification globale du chemin vise à trouver un chemin optimal basé sur une carte géographique globale a priori. Cependant, la planification de trajectoire globale n\'est pas suffisante pour contrôler un drone en temps réel, en particulier lorsqu\'il y a d\'autres tâches à effectuer immédiatement ou des obstacles inattendus qui apparaissent pendant le vol. Par conséquent, la planification locale de la trajectoire est nécessaire pour acquérir constamment les informations des capteurs de l\'environnement et calculer la trajectoire sans collision en temps réel.\n\n## Planification globale du chemin\nLe planificateur de trajectoire globale nécessite les emplacements de départ et d\'arrivée dans une carte construite pour calculer une trajectoire initiale, de sorte que la carte globale est également appelée carte statique. Les algorithmes couramment utilisés pour la planification du chemin global comprennent des méthodes de recherche heuristique et une série d\'algorithmes intelligents.\n\n## Planification de trajectoire locale\nLa planification de la trajectoire locale est basée sur les informations de l\'environnement local et l\'estimation de l\'état des drones, et vise à planifier dynamiquement une trajectoire locale sans collision. En raison de facteurs incertains, tels que les mouvements des objets dans l\'environnement dynamique, la planification de trajectoire dans l\'environnement dynamique devient un problème très complexe. Dans ce cas, les algorithmes de planification de trajectoire doivent s\'adapter aux caractéristiques dynamiques de l\'environnement, en obtenant des informations (telles que la taille, la forme et l\'emplacement) sur les parties inconnues de l\'environnement par le biais de divers capteurs.\nLes méthodes traditionnelles de planification de trajectoire locale consistent en des méthodes de recherche spatiale, des méthodes de champ potentiel artificiel, des méthodes de logique floue, des méthodes de réseaux neuronaux, etc.'},SaQuestionaire{#order:5,#title:'Quiz #1: Services',#id:#NavGlobalPlanningQuiz,#optional:false,#questions:OrderedCollection[SaOpenQuestion{#id:#NavPlanningQ1,#state:'Le path planning est le processus de détermination d\'une séquence de mouvements ou de positions pour un robot afin d\'atteindre un objectif ou une destination spécifique dans un environnement donné tout en evitant les obstacles.',#optional:false,#question:'Qu\'est-ce que ce le path planning?'},SaOpenQuestion{#id:#NavPlanningQ2,#state:'Car en global on va puvoir determiner le trajet a prendre au depart sans pour pour autant prendre en compte des changements de derniere minute. \rAvec le local on va pouvoir avoir les informations rafraichie en temps reel par rapport aux different capteurs et recalculer la trajectoire en fonction.\r',#optional:false,#question:'Pour quoi on divise le problemme en local et global planning?'}]},SaMarkdownContent{#order:6,#title:'Navigation Experiment',#id:#NavigationExperiment,#content:'D\'avant commencer avec cet experiment il faut absolumnent avoir fait: \n\n1- L\'experiment SLAM\n2- Sauvegarder la carte produit par SLAM\n\n\n================================================================================\n\nDans le NUC Ouvrir une terminal et demarrer le node MASTER de ROS avec la commande \n\n```\n$ roscore\n````\n\n================================================================================\n\nOuvrir une deuxieme terminal. Connecter au robot: \n```\nssh ubuntu@{IP_VOS_ROBOT}\n```\nUne fois connecté, demarré les services de base du turtlebot\n``` \nroslaunch turtlebot3_bringup turtlebot3_robot.launch\n``` \n\n================================================================================\nDans une troisieme terminal. \nConfigurer vos model de robot. (Vous pouvez aussi ajouter ce ligne a la fin de votre .bashrc du NUC)\n\n```\n$ export TURTLEBOT3_MODEL=burger\n``` \n\nNote svp que il y a un parametre dans la prochain ligne que doit etre fournis par VOUS.\n\n```\n$ roslaunch turtlebot3_navigation turtlebot3_navigation.launch map_file:=CHEMIN/AU/CARTE/map.yaml\n``` \n\n\n================================================================================\n\nDans RVIZ ajoute des visualisations pour: Global path, Local path. \n\n\n================================================================================\n\nAvec le bouton "destination", demandez au robot de se balader.\n\n\n1- Qu\'est-ce qu\'il fait? \n2- Analysez RVIZ. Qu\'est-ce que vous trouvez en rapport au global et local planning? \n3- Qu\'est-ce que ce passe avec la trajectoire? \n\n\n================================================================================\n\n\nAvec le bouton "destination", demandez au robot de se balader une deuxieme fois. Cet fois-ci une personne du group doit se balader pour empecher le robot de traverser.\n\n\n1- Qu\'est-ce qu\'il fait? \n2- Analysez RVIZ. Qu\'est-ce que vous trouvez en rapport au global et local planning? \n3- Qu\'est-ce que ce passe avec la trajectoire? \n\n\n\n\n\n\n\n'},SaQuestionaire{#order:7,#title:'Quiz #3: Navigation Experiments',#id:#NavExperimentQuiz2523,#optional:false,#questions:OrderedCollection[SaOpenQuestion{#id:#NavExperimentQ1,#state:'La visualisation en global est tracé sur la map enregistrer alors que en local la zone de la map autour du robot va se mettre a jour en dynamique et rafraichir le chemin',#optional:false,#question:'Compare brefment la difference entre la reaction entre la visualisation du local et global planning.'},SaOpenQuestion{#id:#NavExperimentQ45,#state:'Le pathplanning va se faire faire sur la map global sans forcement prendre en compte les infos reçu par les capteurs alors que le costmap va se faire sur la map local autour du robot',#optional:false,#question:'Analisez brefment la relation entre le pathplanning, le costmap et le robot.'}]},SaLessonSummary{#order:8,#title:'Summary',#id:#__Summary,#content:'#Summaire  \n## Navigation\nLa navigation consiste à déplacer le robot d\'un endroit à une destination spécifiée dans un environnement donné. Pour ce faire, une carte contenant les informations géométriques des meubles, des objets et des murs de l\'environnement est nécessaire. Comme décrit dans la section SLAM précédente, la carte a été créée avec les informations de distance obtenues par le capteur et les informations de pose du robot lui-même.\nLa navigation permet au robot de se déplacer de la position actuelle à la position cible désignée sur la carte en utilisant la carte, l\'encodeur du robot, le capteur inertiel et le capteur de distance. La procédure d\'exécution de cette tâche est la suivante.\n\n###Détection du site\nSur la carte, le robot met à jour ses informations d\'odométrie avec l\'encodeur et le capteur inertiel (capteur IMU), et mesure la distance entre la pose du capteur et l\'obstacle (mur, objet, meuble, etc.).\n\n###Localisation / Estimation de la pose\nSur la base de la quantité de rotation de la roue provenant de l\'encodeur, de l\'information sur l\'inertie provenant du capteur IMU et de l\'information sur la distance entre le capteur et l\'obstacle, la localisation/l\'estimation de la pose du robot actuel est effectuée sur la carte précédemment créée. Il existe de nombreuses méthodes d\'estimation de la pose, mais dans cette section, nous utiliserons la méthode de localisation par filtre particulaire et la localisation adaptative Monte Carlo (AMCL), qui est une variante de la localisation Monte Carlo (MCL).\n\n###Planification du mouvement\nLa planification du mouvement, également appelée planification de la trajectoire, crée une trajectoire entre la pose actuelle et la pose cible spécifiée sur la carte. Le plan de trajectoire créé comprend la planification de la trajectoire globale dans toute la carte et la planification de la trajectoire locale pour les zones plus petites autour du robot. Nous prévoyons d\'utiliser les paquets de planification d\'itinéraire \'move_base\' et \'nav_core\' dans ROS basés sur l\'approche de fenêtre dynamique (DWA), qui est un algorithme d\'évitement d\'obstacles.\n\n###Déplacement / Évitement d\'obstacles\nSi une commande est donnée au robot sur la base de la trajectoire de mouvement créée par la planification du mouvement, le robot se déplace vers la destination en fonction de la trajectoire planifiée. Étant donné que la détection, l\'estimation de la pose et la planification du mouvement sont toujours exécutées pendant le déplacement, les obstacles ou les objets mobiles qui apparaissent soudainement seront évités à l\'aide de l\'algorithme Dynamic Window Approach (DWA).'}],#title:'Navigation',#current:9,#submitFolder:#RosElementalConcepts,#id:#Navigation}